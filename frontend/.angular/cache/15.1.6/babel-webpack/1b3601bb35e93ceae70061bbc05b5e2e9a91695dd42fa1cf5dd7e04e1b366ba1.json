{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/common\";\nfunction ReadComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵtext(11, \"EDIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function ReadComponent_tr_15_Template_button_ngSubmit_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser());\n    });\n    i0.ɵɵtext(13, \"DELETE\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const usr_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usr_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usr_r1.fullname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usr_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usr_r1.mobile);\n  }\n}\nexport class ReadComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    this.api.getAllUser().subscribe(res => this.readUser = res.data);\n  }\n  deleteUser() {\n    this.api.deleteUser().subscribe(res => {\n      console.log(res, 'Data added Success');\n    });\n  }\n}\nReadComponent.ɵfac = function ReadComponent_Factory(t) {\n  return new (t || ReadComponent)(i0.ɵɵdirectiveInject(i1.ApiserviceService));\n};\nReadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadComponent,\n  selectors: [[\"app-read\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"container\", \"my-5\"], [1, \"table\", \"table-bordered\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mx-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"ngSubmit\"]],\n  template: function ReadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"FullName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2);\n      i0.ɵɵtext(11, \"Mobile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 2);\n      i0.ɵɵtext(13, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ReadComponent_tr_15_Template, 14, 4, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.readUser);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAYYA,0BAAiC;IACbA,YAAU;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAmDA,qBAAI;IAAAA,iBAAS;IAAAA,kCAAuE;IAA1BA;MAAAA;MAAA;MAAA,OAAYA,kCAAY;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAJ1IA,eAAU;IAAVA,+BAAU;IACtBA,eAAgB;IAAhBA,qCAAgB;IAChBA,eAAa;IAAbA,kCAAa;IACbA,eAAc;IAAdA,mCAAc;;;ACRlC,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,GAAqB;IAArB,QAAG,GAAHA,GAAG;EAAoB;EAG3CC,QAAQ;IACN,IAAI,CAACD,GAAG,CAACE,UAAU,EAAE,CAACC,SAAS,CAACC,GAAG,IAAE,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACE,IAAI,CAAC;EAChE;EAEAC,UAAU;IACN,IAAI,CAACP,GAAG,CAACO,UAAU,EAAE,CAACJ,SAAS,CAAEC,GAAG,IAAG;MAACI,OAAO,CAACC,GAAG,CAACL,GAAG,EAAC,oBAAoB,CAAC;IAAA,CAAC,CAAC;EACnF;;AAXWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BjB,8BAA4B;MAIIA,kBAAE;MAAAA,iBAAK;MACvBA,6BAAgB;MAAAA,wBAAQ;MAAAA,iBAAK;MAC7BA,6BAAgB;MAAAA,qBAAK;MAAAA,iBAAK;MAC1BA,8BAAgB;MAAAA,uBAAM;MAAAA,iBAAK;MAC3BA,8BAAgB;MAAAA,uBAAM;MAAAA,iBAAK;MAGnCA,8BAAO;MACHA,+DAMK;MACTA,iBAAQ;;;MAPgBA,gBAAW;MAAXA,sCAAW","names":["i0","ReadComponent","constructor","api","ngOnInit","getAllUser","subscribe","res","readUser","data","deleteUser","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Codes\\Angular\\angularMysql\\frontend\\src\\app\\read\\read.component.html","E:\\Codes\\Angular\\angularMysql\\frontend\\src\\app\\read\\read.component.ts"],"sourcesContent":["<div class=\"container my-5\">\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th scope=\"col\">ID</th>\n                <th scope=\"col\">FullName</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Mobile</th>\n                <th scope=\"col\">Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let usr of readUser\">\n                <th scope=\"row\">{{usr.id}}</th>\n                <td>{{usr.fullname}}</td>\n                <td>{{usr.email}}</td>\n                <td>{{usr.mobile}}</td>\n                <td><button type=\"button\" class=\"btn btn-primary mx-2\">EDIT</button><button type=\"button\" class=\"btn btn-danger\" (ngSubmit)=\"deleteUser()\">DELETE</button></td>\n            </tr>\n        </tbody>\n    </table>\n\n</div>","import { Component } from '@angular/core';\nimport { ApiserviceService } from '../apiservice.service';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class ReadComponent {\n\n  constructor(private api:ApiserviceService){};\n  readUser:any;\n\n  ngOnInit():void{\n    this.api.getAllUser().subscribe(res=>this.readUser = res.data);\n  }\n\n  deleteUser(){\n      this.api.deleteUser().subscribe((res)=>{console.log(res,'Data added Success')})\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}